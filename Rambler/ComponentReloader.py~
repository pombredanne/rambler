from Rambler import outlet
import sys,md5

class ComponentReloader(object):
    componentRegistry = outlet('ComponentRegistry')

    def __init__(self):
	self.modStats = {} 
	# key is the dotted mod path, suitable for finding the given
	# module from sys.modules and the value is a tuple of path to
	# the module and md5

    def scanComponents(self):
	"""Scan through the bound components building an MD5 of each of there
	source files."""

	moduleStats = {}
	# TODO: Keep track of which component is associated with each
	# file
	for comp in self.bound.values():
	    if type(comp) != type:
		modName = comp.__class__.__module__
	    else:
		modName = comp.__module__

	    if modName not in moduleStats:
		module = sys.modules[modName]
		modPath = module.__file__
		modFile = open(modPath)
		m = md5.new()

		chunk = modFile.read(1024)
		while chunk:
		    m.update(chunk)
		    chunk = modFile.read(1024)
		modFile.close()
		
		moduleStats[modName] = (modPath, m.digest())

	return modulStats
	    

    def reload(self):
	"""Reload all files that have changed"""
